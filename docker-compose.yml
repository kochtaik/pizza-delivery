version: '3'
services:
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports: 
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-logs:/var/log/rabbitmq
    networks:
      - pizza-delivery
    env_file: .env
  
  auth_service:
    build: 
      context: './auth'
    ports:
      - '3002:3002'
    networks:
      - pizza-delivery
    depends_on:
      - 'rabbitmq'
    command: sh -c '/bin/wait-for-it.sh rabbitmq:5672 --timeout=30 -- npm run start'
    env_file:
      - ./auth/.env

  products_service:
    build: 
      context: './products'
    ports:
      - '3001:3001'
    volumes:
      - products-service:/usr/src/app
    depends_on:
      - products_mongodb
    networks:
      - pizza-delivery
    env_file:
      - ./products/.env

  products_mongodb:
    image: mongo
    ports: 
      - '27017:27017'
    volumes:
      - products-mongodb:/data/db
      - products-mongodb_config:/data/configdb
    networks:
      - pizza-delivery
    env_file:
      - ./products/.env

  users_service:
    build:
      context: './users'
    ports:
      - '3003:3003'
    volumes:
      - 'users_service:/usr/src/users-service'
    depends_on:
      - users_mongodb
    networks:
      - pizza-delivery
    env_file:
      - ./users/.env

  users_mongodb:
    image: mongo
    ports:
      - '27018:27018'
    volumes:
      - users-mongodb:/data/db
      - users-mongodb_config:/data/configdb
    networks:
      - pizza-delivery
    depends_on:
      - rabbitmq
    env_file:
      - ./users/.env

  mongo-express:
    image: mongo-express:latest
    depends_on:
      - products_mongodb
    ports:
      - '4000:8081'
    restart: unless-stopped
    networks:
      - pizza-delivery
    env_file:
      - .env

volumes:
  products-service:
  users_service:
  products-mongodb:
  users-mongodb:
  products-mongodb_config:
  users-mongodb_config:
  rabbitmq-data:
  rabbitmq-logs:
networks:
  pizza-delivery:
    driver: bridge